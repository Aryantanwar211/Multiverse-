---
// Get user data from cookie
const userData = Astro.cookies.get('discord_user')?.json();

function getInitials(username: string) {
  return username.slice(0, 2).toUpperCase();
}
---

<nav class="bg-white dark:bg-neutral-800 border-b border-gray-200 dark:border-neutral-700">
  <div class="px-4 sm:px-6 lg:px-8">
    <div class="flex h-16 items-center justify-between">
      <!-- Left side -->
      <div class="flex items-center lg:hidden">
        <button
          type="button"
          class="text-gray-500 hover:text-gray-600 dark:text-gray-400 dark:hover:text-gray-300"
          id="sidebar-toggle"
          aria-controls="sidebar"
          aria-expanded="false"
        >
          <span class="sr-only">Open sidebar</span>
          <svg
            class="h-6 w-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"
            />
          </svg>
        </button>
      </div>

      <!-- Search bar -->
      <div class="flex flex-1 items-center justify-center lg:justify-start">
        <div class="w-full max-w-lg lg:max-w-xs">
          <label for="search" class="sr-only">Search</label>
          <div class="relative">
            <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
              <svg
                class="h-5 w-5 text-gray-400"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                />
              </svg>
            </div>
            <input
              id="search"
              name="search"
              class="block w-full rounded-md border border-gray-300 dark:border-neutral-600 bg-white dark:bg-neutral-700 py-2 pl-10 pr-3 text-sm placeholder-gray-500 dark:placeholder-gray-400 focus:border-pink-500 focus:outline-none focus:ring-1 focus:ring-pink-500"
              placeholder="Search servers..."
              type="search"
            />
          </div>
        </div>
      </div>

      <!-- Right side -->
      <div class="flex items-center gap-4">
        <!-- Theme toggle -->
        <button
          type="button"
          id="theme-toggle"
          class="rounded-lg p-2.5 text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-neutral-700 dark:focus:ring-neutral-600"
        >
          <svg
            id="theme-toggle-dark-icon"
            class="hidden h-5 w-5"
            fill="currentColor"
            viewBox="0 0 20 20"
          >
            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
          </svg>
          <svg
            id="theme-toggle-light-icon"
            class="hidden h-5 w-5"
            fill="currentColor"
            viewBox="0 0 20 20"
          >
            <path
              d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
            ></path>
          </svg>
        </button>

        <!-- User menu -->
        {userData && (
          <div class="relative">
            <button
              type="button"
              class="flex items-center gap-2 rounded-full focus:outline-none focus:ring-2 focus:ring-pink-500 focus:ring-offset-2"
              id="user-menu-button"
              aria-expanded="false"
              aria-haspopup="true"
            >
              {userData.avatar ? (
                <img
                  class="h-8 w-8 rounded-full"
                  src={`https://cdn.discordapp.com/avatars/${userData.id}/${userData.avatar}.png`}
                  alt={userData.username}
                />
              ) : (
                <div class="flex h-8 w-8 items-center justify-center rounded-full bg-pink-500 text-white">
                  {getInitials(userData.username)}
                </div>
              )}
            </button>

            <!-- Dropdown menu -->
            <div
              class="absolute right-0 mt-2 hidden w-48 rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 dark:bg-neutral-800 dark:ring-neutral-700"
              id="user-menu"
              role="menu"
              aria-orientation="vertical"
              aria-labelledby="user-menu-button"
              tabindex="-1"
            >
              <a
                href="/dash/profile"
                class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-200 dark:hover:bg-neutral-700"
                role="menuitem"
              >
                Your Profile
              </a>
              <a
                href="/dash/settings"
                class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-200 dark:hover:bg-neutral-700"
                role="menuitem"
              >
                Settings
              </a>
              <a
                href="/logout"
                class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-200 dark:hover:bg-neutral-700"
                role="menuitem"
              >
                Sign out
              </a>
            </div>
          </div>
        )}
      </div>
    </div>
  </div>
</nav>

<script>
  // Theme toggle functionality
  const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
  const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
  const themeToggleBtn = document.getElementById('theme-toggle');

  // Change the icons inside the button based on previous settings
  if (localStorage.getItem('hs_theme') === 'dark' ||
      (!('hs_theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
    themeToggleLightIcon?.classList.remove('hidden');
  } else {
    themeToggleDarkIcon?.classList.remove('hidden');
  }

  themeToggleBtn?.addEventListener('click', function() {
    // toggle icons
    themeToggleDarkIcon?.classList.toggle('hidden');
    themeToggleLightIcon?.classList.toggle('hidden');

    // if is set in localStorage
    if (localStorage.getItem('hs_theme')) {
      // if is dark, set light, else set dark
      if (localStorage.getItem('hs_theme') === 'dark') {
        document.documentElement.classList.remove('dark');
        localStorage.setItem('hs_theme', 'light');
      } else {
        document.documentElement.classList.add('dark');
        localStorage.setItem('hs_theme', 'dark');
      }
    } else {
      // if NOT set in localStorage
      if (document.documentElement.classList.contains('dark')) {
        document.documentElement.classList.remove('dark');
        localStorage.setItem('hs_theme', 'light');
      } else {
        document.documentElement.classList.add('dark');
        localStorage.setItem('hs_theme', 'dark');
      }
    }
  });

  // User menu functionality
  const userMenuButton = document.getElementById('user-menu-button');
  const userMenu = document.getElementById('user-menu');

  userMenuButton?.addEventListener('click', () => {
    userMenu?.classList.toggle('hidden');
  });

  // Close menu when clicking outside
  document.addEventListener('click', (event) => {
    if (!userMenuButton?.contains(event.target as Node) && !userMenu?.contains(event.target as Node)) {
      userMenu?.classList.add('hidden');
    }
  });

  // Sidebar toggle functionality
  const sidebarToggle = document.getElementById('sidebar-toggle');
  const sidebar = document.getElementById('sidebar');

  sidebarToggle?.addEventListener('click', () => {
    sidebar?.classList.toggle('-translate-x-full');
  });
</script>